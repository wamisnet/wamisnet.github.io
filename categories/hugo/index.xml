<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hugo on わみめも</title>
    <link>https://wamisnet.github.io/categories/hugo/</link>
    <description>Recent content in hugo on わみめも</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 05 Jul 2020 05:59:12 +0000</lastBuildDate>
    
	<atom:link href="https://wamisnet.github.io/categories/hugo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HugoのShortcodeを活用してみた</title>
      <link>https://wamisnet.github.io/blog/2020-07-05-hugo_shortcode/</link>
      <pubDate>Sun, 05 Jul 2020 05:59:12 +0000</pubDate>
      
      <guid>https://wamisnet.github.io/blog/2020-07-05-hugo_shortcode/</guid>
      <description>下記のサイトを参考にshortcodeをつくってみました。
ショートコード作成の解説 | Hugo 入門 / 解説 | nasust dev blog  こんにちはnasustです。 今回は、Hugoでショートコード作成の解説をします。 ショートコードとは Markdown文章中に {{&amp;lt; ショートコードテ...  https://nasust.com/hugo/tips/shortcode/     Hugoでブログカードに対応する | Hugo 入門 / 解説 | nasust dev blog  こんにちはnasustです。 今回は、Hugoでブログカードに対応する方法を紹介します。 私のもう1つのブログは、はてなブログを使用しています。...  https://nasust.com/hugo/shortcode/blogcard/     2つのshortcodeを追加しました。
warning 警告文を出すようのものですね
warning Warning 各自の環境で同様に動作する保証はありません。   こんなコードを書いたら、上のようにきれいにしてくれちゃうんです。
&amp;lt;!--warning Warning 各自の環境で同様に動作する保証はありません。   --&amp;gt; link card リンクですね、リンク先に深い意図はないです。
いい感じに画像が見えたので使わせてもらいました。
ZAICO | クラウド在庫管理ソフト iPhone・Android・API対応  無料から使えるクラウド在庫管理ソフトです。スマートフォン(iPhone, iPad, Android)アプリとWebアプリがあり、Mac・Windowsのどちらでも使えます。データ同期・共有機能で複数人・複数拠点で最新の在庫・備品情報を手元で簡単に確認できます。APIによるシステム連携も可能です。  https://www.</description>
    </item>
    
    <item>
      <title>このサイトの構成について</title>
      <link>https://wamisnet.github.io/blog/2020-07-05-site_info/</link>
      <pubDate>Sat, 04 Jul 2020 15:01:35 +0000</pubDate>
      
      <guid>https://wamisnet.github.io/blog/2020-07-05-site_info/</guid>
      <description>warning Warning 各自の環境で同様に動作する保証はありません。   使用技術 このサイトでは下記の技術を使用して構成されています。
  Hugo
 テンプレート: hugo-future-imperfect-slim    CircleCi
 Docker    Netlify CMS
 firebase cloud Functions    GitHub
 GitHub pages    こんな感じでしょうか。
Hugo 静的サイトジェネレータとしてマークダウンからHTMLを生成しています。 テンプレートを使用して、デザインを整えています。
CircleCI マークダウンを更新してGithubにコミットをすると、CIが発火してHTMLを自動的に生成してくれます。 後述する、CMSでマークダウンを書いたら自動的にビルドして、デプロイしてくれます。
記事を書くだけでOKなのはらくちん
Netlify CMS 別の記事で軽く書きましたが、WordPressのようなコンテンツ管理システムになります。
この記事もCMS上で書いてます。
認証にFirebaseを使っています。
auto save的なものがあるといいなぁ
GitHub マークダウンやホームページの配布までまるっとやってもらっています。
GitHubが使えるということは差分やプルリクで管理するといったこともできます。
いつもと同じ感じに記事がかけるって便利ですね
こんな感じの構成になっています。
次の項目でどういう手順でいろんなものが連動して動いているのか確認しておこうと思います。
動作手順(私から見た動作)  Netlify CMSにログインして、記事を書く 記事を書き終えたら、Netlify CMSの公開ボタンを押す ホームページで記事が公開される  めちゃくちゃ普通のサービスと一緒ですね
動作手順(サービス側の動作)  Netlify CMSにログインして、記事を書く 保存を押すと、記事用のブランチが生成されてGitHubにコミットされる 記事を書き終えたら、Netlify CMSの公開ボタンを押す GitHubにプルリクエストが生成され、自動的に承認される CircleCIが特定のブランチが更新されたのを確認し、Hugoのビルドを開始する ビルドされたものをGitHubにコミットする GitHub Pagesでコミットされた内容でホームページが更新される  裏側ではいろいろ動いてくれますが、なにも気にしなくてOKです！</description>
    </item>
    
  </channel>
</rss>